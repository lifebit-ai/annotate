/*
 * -------------------------------------------------
 * Annotate  Nextflow base config file
 * -------------------------------------------------
 */

process {

  // TODO nf-core: Check the defaults for all processes
  cpus = { check_max( 1 * task.attempt, 'cpus' ) }
  memory = { check_max( 7.GB * task.attempt, 'memory' ) }
  time = { check_max( 4.h * task.attempt, 'time' ) }
  container = 'lifebitai/annotate:dev'
  errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'terminate' }
}

docker.enabled = true

params {

  // Workflow flags
  outdir = './results'
  publish_dir_mode = 'copy'

  // Files
  empty_file = 's3://lifebit-featured-datasets/projects/gel/siteqc/nodata'

  input = false
  predicted_ancestries = false
  unrelated_list = false
  siteqc_results_dir = false
 
  // Values
  king = 'F'
  aggregate_final = 'T'

  // SiteQC results folder and file names (Must be in sync with SiteQC pipeline!)
  startfiles_dir = 'startfiles'
  startfiles_prefix = 'start_file_'
  missing1_dir = 'missing1'
  missing1_prefix = 'missing1_'
  missing2_dir = 'missing2'
  missing2_prefix = 'missing2_'
  median_coverage_all_dir = 'median_coverage_all'
  median_coverage_all_prefix = 'medianCoverageAll'
  medianNonMiss_dir = 'medianCoverageNonMiss'
  medianNonMiss_prefix = 'medianNonMiss_depth_'
  medianGQ_dir = 'medianGQ'
  medianGQ_prefix = 'medianGQ_'
  hetAll_dir = 'AB_hetAll'
  hetAll_prefix = 'hetAll_'
  hetPass_dir = 'AB_hetPass'
  hetPass_prefix = 'hetPass_'
  MendErr_dir = 'MendelErrSites'
  MendErr_prefix = 'MendErr_'
  N_samples_suffix = '_N_samples.txt'
  AC_counts_dir = 'AC_counts'
  AC_counts_suffix = '_AC'

}
